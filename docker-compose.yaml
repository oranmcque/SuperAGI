version: '3.8'

services:
  backend:
    volumes:
      - "./:/app"
    build: .
    depends_on:
      - super__redis
      - super__postgres
    networks:
      - super_network
    command: ["/app/wait-for-it.sh", "super__postgres:5432","-t","60","--","/app/entrypoint.sh"]
    environment:
      - DB_URL=postgresql://superagi:password@super__postgres:5432/super_agi_main
      - REDIS_URL=redis://super__redis:6379/0

  celery:
    volumes:
      - "./:/app"
      - "${EXTERNAL_RESOURCE_DIR:-./workspace}:/app/ext"
    build: .
    depends_on:
      - super__redis
      - super__postgres
    networks:
      - super_network
    command: ["/app/entrypoint_celery.sh"]
    environment:
      - DB_URL=postgresql://superagi:password@super__postgres:5432/super_agi_main
      - REDIS_URL=redis://super__redis:6379/0

  gui:
    build:
      context: ./gui
      args:
        NEXT_PUBLIC_API_BASE_URL: "/api"
    networks:
      - super_network
      - dokploy-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.superagi-gui.rule=Host(`app.mydomain.com`)"
      - "traefik.http.routers.superagi-gui.entrypoints=web"
      - "traefik.http.routers.superagi-gui.service=superagi-gui-service"
      - "traefik.http.services.superagi-gui-service.loadbalancer.server.port=3000"
      - "traefik.http.routers.superagi-gui-secure.rule=Host(`app.mydomain.com`)"
      - "traefik.http.routers.superagi-gui-secure.entrypoints=websecure"
      - "traefik.http.routers.superagi-gui-secure.tls.certresolver=letsencrypt"
      - "traefik.http.routers.superagi-gui-secure.service=superagi-gui-service"
      - "traefik.docker.network=dokploy-network"
    restart: always

  super__redis:
    image: "redis/redis-stack-server:latest"
    networks:
      - super_network
    volumes:
      - redis_data:/data

  super__postgres:
    image: "postgres:15"
    environment:
      - POSTGRES_USER=superagi
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=super_agi_main
    networks:
      - super_network
    volumes:
      - superagi_postgres_data:/var/lib/postgresql/data/

networks:
  super_network:
    driver: bridge
  dokploy-network:
    external: true

volumes:
  superagi_postgres_data:
  redis_data:
